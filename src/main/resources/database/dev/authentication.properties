AUTHENTICATIONQUERY=a.a_id a_id,\
                    a.a_user_id a_user_id,\
                    a.a_login_id a_user_loginid,\
                    a.a_pwd a_user_pwd,\
                    a.a_active_ind a_active_ind,\
                    a.a_login_count a_login_count,\
                    a.a_account_status a_account_status,\
                    a.a_type a_user_type,\
                    a.a_org_id a_user_orgId,\
                    a.a_last_logged_in a_last_logged_in,\
                    a.a_first_name a_user_firstName,\
                    a.a_last_name a_user_lastName,\
                    a.a_email_id a_user_email_Id,\
                    a.a_system system

SYSUSERROLEQUERY=  ur.ur_id ur_id,\
                ur.ur_uid ur_uid,\
                ur.ur_role ur_role,\
                ur.ur_active_ind ur_active_ind

USERROLEQUERY=  ur.ur_id ur_id,\
                ur.ur_uid ur_uid,\
                ur.ur_role ur_role,\
                ur.ur_active_ind ur_active_ind,\
                ur.ur_org_id ur_org_id,\
                ur.ur_desg ur_desg,\
                ur.ur_branch ur_branch

UPDATEUSERROLEPARAM=  ur_uid = :ur_uid,\
                ur_role = :ur_role,\
                ur_active_ind = :ur_active_ind,\
                ur_desg = :ur_desg,\
                ur_org_id = :ur_org_id,\
                ur_branch = :ur_branch

USERROLEFIELDS =ur_uid,\
                ur_role,\
                ur_active_ind,\
                ur_desg,\
                ur_org_id,\
                ur_branch

INSERTUSERROLESFIELDS = (ur_uid,ur_role,ur_org_id,ur_desg ,ur_branch) values (:ur_uid,:ur_role,:ur_org_id,:ur_desg ,:ur_branch)

INSERTUSERROLES = insert into emss.userroles ${INSERTUSERROLESFIELDS}

UPDATEUSERROLE = update emss.userroles set ${UPDATEUSERROLEPARAM} where ur_uid = :ur_uid and ur_org_id = :ur_org_id

DESIGNATION_QUERY = ds.d_id d_id,\
                  ds.d_oid d_oid,\
                  ds.d_title d_title,\
                  ds.d_active_ind d_active_ind,\
                  ds.d_dcat d_dcat

ROLEQUERY=  sr.r_id r_id,\
            sr.r_title r_title,\
            sr.r_active_ind r_active_ind,\
            sr.r_desc r_desc

USERPHOTOQUERY =up.id upid,up.u_photo photo,up.u_id upuid,up.u_org_id uporg_id

SYSTEMUSERQUERY=su.u_id uid,\
                su.u_first_name firstname,\
                su.u_middle_name middlename,\
                su.u_last_name lastname,\
                su.u_dob dob,\
                su.u_nativity nativity,\
                su.u_nationality nationality,\
                su.u_religion religion,\
                su.u_caste caste,\
                su.u_subcaste subcaste,\
                su.u_father_name fathername,\
                su.u_mother_name mothername,\
                su.u_guardian_name guardianname,\
                su.u_guardian_relation guardianrelation,\
                su.u_caddress caddress,\
                su.u_clocation clocation,\
                su.u_cstreet cstreet,\
                su.u_ccity ccity,\
                su.u_cstate cstate,\
                su.u_cdistrict cdistrict,\
                su.u_cmandal cmandal,\
                su.u_czipcode czipcode,\
                su.u_paddress paddress,\
                su.u_plocation plocation,\
                su.u_pstreet pstreet,\
                su.u_pcity pcity,\
                su.u_pstate pstate,\
                su.u_pdistrict pdistrict,\
                su.u_pmandal pmandal,\
                su.u_pzipcode pzipcode,\
                su.u_pcontact_no pcontactno,\
                su.u_scontact_no scontactno,\
                su.u_econtact_no econtactno,\
                su.u_mcontact_no mcontactno,\
                su.u_fcontact_no fcontactno,\
                su.u_gcontact_no gcontactno,\
                su.u_active_ind activeind,\
                su.u_email_id emailid,\
                su.u_alt_email_id altemailid,\
                su.u_social_security_Id socialsecurityid,\
                su.u_social_security_name socialsecurityname,\
                su.u_suffix suffix,\
                su.u_mother_tongue mothertongue,\
                su.u_ethnic_group ethnicgroup,\
                su.u_ethnic_designation ethnicdesignation,\
                su.u_decile_group decilegroup,\
                su.u_tenure tenure

USERDETAILQUERY = u.u_id uid,\
            u.u_org_id orgid,\
            u.u_first_name firstname,\
            u.u_middle_name middlename,\
            u.u_last_name lastname,\
            u.u_dob dob,\
            u.u_gender gender,\
            u.u_nativity nativity,\
            u.u_nationality nationality,\
            u.u_religion religion,\
            u.u_caste caste,\
            u.u_subcaste subcaste,\
            u.u_father_name fathername,\
            u.u_mother_name mothername,\
            u.u_guardian_name guardianname,\
            u.u_guardian_relation guardianrelation,\
            u.u_caddress caddress,\
            u.u_clocation clocation,\
            u.u_cstreet cstreet,\
            u.u_ccity ccity,\
            u.u_cstate cstate,\
            u.u_cdistrict cdistrict,\
            u.u_cmandal cmandal,\
            u.u_czipcode czipcode,\
            u.u_paddress paddress,\
            u.u_plocation plocation,\
            u.u_pstreet pstreet,\
            u.u_pcity pcity,\
            u.u_pstate pstate,\
            u.u_pdistrict pdistrict,\
            u.u_pmandal pmandal,\
            u.u_pzipcode pzipcode,\
            u.u_pcontact_no pcontactno,\
            u.u_scontact_no scontactno,\
            u.u_econtact_no econtactno,\
            u.u_mcontact_no mcontactno,\
            u.u_fcontact_no fcontactno,\
            u.u_gcontact_no gcontactno,\
            u.u_active_ind activeind,\
            u.u_email_id emailid,\
            u.u_alt_email_id altemailid,\
            u.u_social_security_Id socialsecurityid,\
            u.u_social_security_name socialsecurityname,\
            u.u_suffix suffix,\
            u.u_mother_tongue mothertongue,\
            u.u_ethnic_group ethnicgroup,\
            u.u_ethnic_designation ethnicdesignation,\
            u.u_decile_group decilegroup,\
            u.u_tenure tenure,\
            u.u_branchid branchid,\
            u.u_height u_height,\
            u.u_weight u_weight,\
            u.u_blood_group u_blood_group,\
            u.u.disease u_disease,\
            u.u_formal_soldier u_formal_soldier,\
            u.u_handicap u_handicap,\
            u.u_panno u_panno,\
            u.u_pfuid u_pfuid,\
            u.u_certificate u_certificate,\
            u.u_cert_name u_cert_name,\
            u.u_cert_grade u_cert_grade,\
            u.u_cert_type u_cert_type,\
            u.bestTeacher u_bestTeacher,\
            u.u_btdesc u_btdesc

USERQUERY = u.u_id u_id,\
            u.u_org_id u_org_id,\
            u.u_first_name u_first_name,\
            u.u_middle_name u_middle_name,\
            u.u_last_name u_last_name,\
            u.u_dob u_dob,\
            u.u_gender u_gender,\
            u.u_nativity u_nativity,\
            u.u_nationality u_nationality,\
            u.u_religion u_religion,\
            u.u_caste u_caste,\
            u.u_subcaste u_subcaste,\
            u.u_father_name u_father_name,\
            u.u_mother_name u_mother_name,\
            u.u_guardian_name u_guardian_name,\
            u.u_guardian_relation u_guardian_relation,\
            u.u_caddress u_caddress,\
            u.u_clocation u_clocation,\
            u.u_cstreet u_cstreet,\
            u.u_ccity u_ccity,\
            u.u_cstate u_cstate,\
            u.u_cdistrict u_cdistrict,\
            u.u_cmandal u_cmandal,\
            u.u_czipcode u_czipcode,\
            u.u_paddress u_paddress,\
            u.u_plocation u_plocation,\
            u.u_pstreet u_pstreet,\
            u.u_pcity u_pcity,\
            u.u_pstate u_pstate,\
            u.u_pdistrict u_pdistrict,\
            u.u_pmandal u_pmandal,\
            u.u_pzipcode u_pzipcode,\
            u.u_pcontact_no u_pcontact_no,\
            u.u_scontact_no u_scontact_no,\
            u.u_econtact_no u_econtact_no,\
            u.u_mcontact_no u_mcontact_no,\
            u.u_fcontact_no u_fcontact_no,\
            u.u_gcontact_no u_gcontact_no,\
            u.u_active_ind u_active_ind,\
            u.u_email_id u_email_id,\
            u.u_alt_email_id u_alt_email_id,\
            u.u_social_security_Id u_social_security_Id,\
            u.u_social_security_name u_social_security_name,\
            u.u_suffix u_suffix,\
            u.u_mother_tongue u_mother_tongue,\
            u.u_ethnic_group u_ethnic_group,\
            u.u_ethnic_designation u_ethnic_designation,\
            u.u_decile_group u_decile_group,\
            u.u_tenure u_tenure,\
            u.u_branchid u_branchid,\
            u.u_height u_height,\
            u.u_weight u_weight,\
            u.u_blood_group u_blood_group,\
            u.u.disease u_disease,\
            u.u_formal_soldier u_formal_soldier,\
            u.u_handicap u_handicap,\
            u.u_panno u_panno,\
            u.u_pfuid u_pfuid,\
            u.u_certificate u_certificate,\
            u.u_cert_name u_cert_name,\
            u.u_cert_grade u_cert_grade,\
            u.u_cert_type u_cert_type,\
            u.bestTeacher u_bestTeacher,\
            u.u_btdesc u_btdesc 

UPDATEUSERQUERY =  u_id = :u_id,\
             u_first_name = :u_first_name,\
             u_middle_name = :u_middle_name,\
             u_last_name = :u_last_name,\
             u_dob = :u_dob,\
             u_gender = :u_gender,\
             u_nativity = :u_nativity,\
             u_nationality = :u_nationality,\
             u_religion = :u_religion,\
             u_caste = :u_caste,\
             u_subcaste = :u_subcaste,\
             u_father_name = :u_father_name,\
             u_mother_name = :u_mother_name,\
             u_guardian_name = :u_guardian_name,\
             u_guardian_relation = :u_guardian_relation,\
             u_caddress = :u_caddress,\
             u_clocation = :u_clocation,\
             u_cstreet = :u_cstreet,\
             u_ccity = :u_ccity,\
             u_cstate = :u_cstate,\
             u_cdistrict = :u_cdistrict,\
             u_cmandal = :u_cmandal,\
             u_czipcode = :u_czipcode,\
             u_paddress = :u_paddress,\
             u_plocation = :u_plocation,\
             u_pstreet = :u_pstreet,\
             u_pcity = :u_pcity,\
             u_pstate = :u_pstate,\
             u_pdistrict = :u_pdistrict,\
             u_pmandal = :u_pmandal,\
             u_pzipcode = :u_pzipcode,\
             u_pcontact_no = :u_pcontact_no,\
             u_scontact_no = :u_scontact_no,\
             u_econtact_no = :u_econtact_no,\
             u_mcontact_no = :u_mcontact_no,\
             u_fcontact_no = :u_fcontact_no,\
             u_gcontact_no = :u_gcontact_no,\
             u_active_ind = :u_active_ind,\
             u_email_id = :u_email_id,\
             u_alt_email_id = :u_alt_email_id,\
             u_social_security_Id = :u_social_security_Id,\
             u_social_security_name = :u_social_security_name,\
             u_suffix = :u_suffix,\
             u_mother_tongue = :u_mother_tongue,\
             u_ethnic_group = :u_ethnic_group,\
             u_ethnic_designation = :u_ethnic_designation,\
             u_decile_group = :u_decile_group,\
             u_tenure = :u_tenure,\
             u_branchid = :u_branchid,\
             u_height= :u_height,\
             u_weight = :u_weight,\
             u_blood_group = :u_blood_group,\
             u.disease = :u_disease,\
             u_formal_soldier = :u_formal_soldier,\
             u_handicap =:u_handicap,\
             u_panno =:u_panno,\
             u_pfuid =:u_pfuid,\
             u_certificate = :u_certificate,\
             u_cert_name = :u_cert_name,\
             u_cert_grade = :u_cert_grade,\
             u_cert_type = :u_cert_type,\
             bestTeacher = :u_bestTeacher,\
             u_btdesc = :u_btdesc


USERFIELDS = u_id,u_org_id,u_first_name,u_middle_name,u_last_name,u_dob,u_gender,\
            u_nativity,u_nationality,u_religion,u_caste,u_subcaste,u_father_name,u_mother_name,\
            u_guardian_name,u_guardian_relation,u_caddress,u_clocation,u_cstreet,u_ccity,\
            u_cstate,u_cdistrict,u_cmandal,u_czipcode,u_paddress,u_plocation,u_pstreet,\
            u_pcity,u_pstate,u_pdistrict,u_pmandal,u_pzipcode,u_pcontact_no,u_scontact_no,u_econtact_no,\
            u_mcontact_no,u_fcontact_no,u_gcontact_no,u_active_ind,u_email_id,u_alt_email_id,u_social_security_Id,\
            u_social_security_name,u_suffix,u_mother_tongue,u_ethnic_group,u_ethnic_designation,u_decile_group,\
            u_tenure,u_branchid,u_height,u_weight,u_blood_group,u_disease,u_formal_soldier,u_handicap,u_panno,u_pfuid,u_certificate,u_cert_name,u_cert_grade,u_cert_type,u_bestTeacher,u_btdesc

USEPARAM = :u_id,:u_org_id,:u_first_name,:u_middle_name,:u_last_name,:u_dob,:u_gender,\
            :u_nativity,:u_nationality,:u_religion,:u_caste,:u_subcaste,:u_father_name,:u_mother_name,\
            :u_guardian_name,:u_guardian_relation,:u_caddress,:u_clocation,:u_cstreet,:u_ccity,\
            :u_cstate,:u_cdistrict,:u_cmandal,:u_czipcode,:u_paddress,:u_plocation,:u_pstreet,\
            :u_pcity,:u_pstate,:u_pdistrict,:u_pmandal,:u_pzipcode,:u_pcontact_no,:u_scontact_no,:u_econtact_no,\
            :u_mcontact_no,:u_fcontact_no,:u_gcontact_no,:u_active_ind,:u_email_id,:u_alt_email_id,:u_social_security_Id,\
            :u_social_security_name,:u_suffix,:u_mother_tongue,:u_ethnic_group,:u_ethnic_designation,:u_decile_group,\
            :u_tenure,:u_branchid,:u_height,:u_weight,:u_blood_group,:u_disease,:u_formal_soldier,:u_handicap,:u_panno,:u_pfuid,:u_certificate,:u_cert_name,:u_cert_grade,:u_cert_type,:u_bestTeacher,:u_btdesc






MODULEQUERY =sm.title title,sm.mview mview,sm.id id,sm.mdesc `mdesc`,sm.mkeys `mkeys`

USERMODULEACCESS=um.id umid,um.mid mid,um.userid userid,um.uview `uview`,um.uedit `uedit`,um.udelete `udelete`,um.orgid orgid, um.uadd uadd

VALIDATE_AUTHORIZATION=select ${AUTHENTICATIONQUERY} from emss.authentication a where a.a_login_id = :a_user_loginid 

GETSYSTEMUSERPHOTO= select ${AUTHENTICATIONQUERY},${USERPHOTOQUERY} from emss.authentication a left outer join emss.suserphoto up on( up.u_id=a.a_user_id) where a.a_login_id = :a_user_loginid 

GETSYSTEMUSERROLES =select ${SYSUSERROLEQUERY},${ROLEQUERY} from emss.suserroles ur,emss.role sr where sr.r_active_ind=true and sr.r_id=ur.ur_role  and ur.ur_uid=:uid



GETALLSYSTEMUSERS=select ${SYSTEMUSERQUERY} from emss.susers su 

GETALLSYSTEMUSERDETAILS = select ${SYSTEMUSERQUERY},${AUTHENTICATIONQUERY},${USERPHOTOQUERY},${SYSUSERROLEQUERY},${ROLEQUERY} \
   from  emss.authentication a  \
  left outer join emss.suserphoto up on(up.u_id=a.a_user_id and ifnull(up.u_org_id,0) = ifnull(a.a_org_id,0)) \
  left join emss.susers su on(su.u_id=a.a_user_id and a.a_org_id=0) \
    left join emss.suserroles ur on(ur.ur_uid = a.a_user_id and ifnull(ur.ur_org_id,0)=a.a_org_id ) \
left join emss.role sr on(ur.ur_role=sr.r_id) where a.a_org_id=0


GETALLUSERDETAILS = select ${USERDETAILQUERY},${AUTHENTICATIONQUERY},${USERPHOTOQUERY},${USERROLEQUERY},${ROLEQUERY} \
   from  emss.authentication a  \
    left outer join emss.userphoto up on(up.u_id=a.a_user_id and up.u_org_id = a.a_org_id) \
    left join emss.users u on(u.u_id=a.a_user_id and a.a_org_id= u.u_org_id) \
    left join emss.userroles ur on(ur.ur_uid = a.a_user_id and ur.ur_org_id=a.a_org_id ) \
    left join emss.role sr on(ur.ur_role=sr.r_id) where ifnull(a.a_org_id,0) = :orgid

GETALLBRANCHUSERDETAILS = select ${USERQUERY},${USERPHOTOQUERY},${USERROLEQUERY},${DESIGNATION_QUERY} \
   from  emss.users u  \
    left outer join emss.userphoto up on(up.u_id=u.u_id and up.u_org_id = u.u_org_id) \
    left join emss.userroles ur on(ur.ur_uid = u.u_id and ur.ur_org_id=u.u_org_id ) \
    left join emss.designation ds on (ds.d_id =  ur.ur_desg and ds.d_oid=u.u_org_id ) \
     where u.u_org_id = :u_org_id and u.u_branchid=:u_branchid

INSERTUSER = insert into emss.users (${USERFIELDS}) values (${USEPARAM})  

UPDATEUSER = update emss.users set ${UPDATEUSERQUERY} where u_org_id = :u_org_id and u_id = :u_id

UPDATEBRANCHUSER = update emss.users set ${UPDATEUSERQUERY} where u_org_id = :u_org_id and u_id = :u_id and u_branchid = :u_branchid

GETUSERROLES = select ${USERROLEQUERY},${ROLEQUERY} from emss.userroles ur,emss.role sr where sr.r_active_ind=true and sr.r_id=ur.ur_role  and ur.ur_uid=:uid and ur.ur_org_id = :ur_org_id

GETUSERPHOTO = select ${AUTHENTICATIONQUERY},${USERPHOTOQUERY} from emss.authentication a left outer join emss.userphoto up on( up.u_id=a.a_user_id) where a.a_login_id = :a_user_loginid and a.a_org_id=:a_org_id


GETUSERASSIGNEDMODULE = select ${MODULEQUERY},${USERMODULEACCESS} from emss.modules sm, emss.usermodule um where sm.id=um.mid and um.userid=:userid




QUERY_PARENT=p_id,p_first_name,p_last_name,p_middle_name,p_email_id,p_pcontactno,p_scontactno,p_address,p_location,p_street,p_state,p_city,p_country,p_zipcode,p_active_ind,p_orgId
QUERY_OTHER=o_id,o_first_name,o_last_name,o_middle_name,o_email_id,o_pcontactno,o_scontactno,o_address,o_location,o_street,o_state,o_city,o_country,o_zipcode,o_active_ind,o_purpose,o_comment,o_remark,o_orgId
QUERY_PARENT_STUD=p_id,p_pid,p_sid,p_active_ind,p_orgId
ADD_AUTHORIZATION=insert into user.authentication (a_user_id,a_user_loginid,a_user_pwd,a_active_ind,a_login_count,a_account_status,a_user_type,a_user_orgId) values (:a_user_id,:a_user_loginid,:a_user_pwd,:a_active_ind,:a_login_count,:a_account_status,:a_user_type,:a_user_orgId)
GET_ORG_AUTHORIZATION_USERS=select ${QUERY} from user.authentication where a_user_orgId = :a_user_orgId
GET_ALL_AUTHORIZATION_USERS=select ${QUERY} from user.authentication 
ADD_PARENT=insert into student.parent (p_first_name,p_last_name,p_middle_name,p_email_id,p_pcontactno,p_scontactno,p_address,p_location,p_street,p_state,p_city,p_country,p_zipcode,p_active_ind,p_orgId) values    (:p_first_name,:p_last_name,:p_middle_name,:p_email_id,:p_pcontactno,:p_scontactno,:p_address,:p_location,:p_street,:p_state,:p_city,:p_country,:p_zipcode,:p_active_ind,:p_orgId)
GET_PARENT=select ${QUERY_PARENT} from student.parent where p_orgId = :oid
GET_PARENT_BY_ID=select ${QUERY_PARENT} from student.parent where p_orgId = :oid and p_id = :pid
GET_PARENT_BY_NAME=select ${QUERY_PARENT} from student.parent where p_orgId = :oid and p_first_name = :firstName or p_last_name = :lastName
GET_PARENT_BY_NAME_LIKE=select ${QUERY_PARENT} from student.parent where p_orgId = :oid and p_first_name like '%'|| :firstName||'%' or p_last_name like '%'||:lastName||'%'
GET_PARENT_BY_EMAIL_ID_IGNORECASE=select ${QUERY_PARENT} from student.parent where p_orgId = :oid and lower(p_email_id) like '%'||:emailid||'%'
ADD_PARENT_STUD=insert into student.parentstudent (p_pid,p_sid,p_active_ind) values (:p_pid,:p_sid,:p_active_ind)
GET_PARENT_STUD_BY_ID=select ${QUERY_PARENT_STUD} from student.parentstudent where p_orgId =:oid and p_pid = :ppid and p_active_ind is true
ADD_OTHER=insert into user.others (o_first_name,o_last_name,o_middle_name,o_email_id,o_pcontactno,o_scontactno,o_address,o_location,o_street,o_state,o_city,o_country,o_zipcode,o_active_ind,o_purpose,o_comment,o_remark,o_orgId) values  (:o_first_name,:o_last_name,:o_middle_name,:o_email_id,:o_pcontactno,:o_scontactno,:o_address,:o_location,:o_street,:o_state,:o_city,:o_country,:o_zipcode,:o_active_ind,:o_purpose,:o_comment,:o_remark,:o_orgId)
GET_OTHER=select ${QUERY_OTHER} from user.others where p_orgId = :oid
GET_OTHER_BY_ID=select ${QUERY_OTHER} from user.others where p_orgId = :oid and p_id = :pid
GET_OTHER_BY_NAME=select ${QUERY_OTHER} from user.others where p_orgId = :oid and p_first_name = :firstName or p_last_name = :lastName
GET_OTHER_BY_NAME_LIKE=select ${QUERY_OTHER} from user.others where p_orgId = :oid and p_first_name like '%'|| :firstName||'%' or p_last_name like '%'||:lastName||'%'
GET_OTHER_BY_EMAIL_ID_IGNORECASE=select ${QUERY_OTHER} from user.others where p_orgId = :oid and lower(p_email_id) like '%'||:emailid||'%'

